# This is a basic workflow to help you get started with Actions

name: Github Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ stage ]
  pull_request:
    branches: [ stage ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCE_INSTANCE: yt-api-board	  
  GCE_INSTANCE_ZONE: asia-northeast3
  GCE_DEPLOY_ZONE: us-east1-b
  SERVICE_NAME: yt-api-board	
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  IMAGE: yt-api
  REGISTRY_HOSTNAME: gcr.io

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies    #npm install
        run: npm install

      - name: Build                   # React Build
        run: npm run build
      
       # Setup gcloud CLI
      - id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          build_args:
            REACT_APP_KEY=${{ secrets.REACT_APP_KEY }} 
            REACT_APP_SOCIAL=${{ secrets.REACT_APP_SOCIAL }}
            REACT_APP_VERIFY=${{ secrets.REACT_APP_VERIFY }}
            REACT_APP_CHANNEL_SEARCH=${{ secrets.REACT_APP_CHANNEL_SEARCH }}
            REACT_APP_CHANNEL_BASIC=${{ secrets.REACT_APP_CHANNEL_BASIC }} 
            REACT_APP_CHANNEL_INFO=${{ secrets.REACT_APP_CHANNEL_INFO }}
            REACT_APP_CHANNEL_SUMMARY=${{ secrets.REACT_APP_CHANNEL_SUMMARY }} 
            REACT_APP_VIDEO_LIST=${{ secrets.REACT_APP_VIDEO_LIST }}
            REACT_APP_VIDEO_SUMMARY=${{ secrets.REACT_APP_VIDEO_SUMMARY }} 
            REACT_APP_VIDEO_INFO=${{ secrets.REACT_APP_VIDEO_INFO }}

      - name: Use gcloud CLI
        run: gcloud info
            
      - name: Connect GCE And execute docker
        run: |-
           gcloud auth configure-docker
           
      # Build the Docker image
      - name: Build
        run: |-
            docker build --tag "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE" .
            docker build --tag "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE":"$GITHUB_SHA" .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
            echo "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE":"$GITHUB_SHA"
            docker push "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE":"$GITHUB_SHA"
            docker tag "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE":"$GITHUB_SHA" "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE":latest
            docker push "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE":latest

      - name: Deploy Frontend App to Cloud run
        run: |-
            echo $SERVICE_NAME
            echo $GCE_INSTANCE_ZONE
            
            gcloud run deploy $SERVICE_NAME \
              --image=$REGISTRY_HOSTNAME/$PROJECT_ID/$IMAGE:$GITHUB_SHA \
              --region=$GCE_INSTANCE_ZONE \
              --port=80
  
